{"ast":null,"code":"//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function () {\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function (typeNumber, errorCorrectionLevel) {\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n    var _this = {};\n    var makeImpl = function (test, maskPattern) {\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function (moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n      mapData(_dataCache, maskPattern);\n    };\n    var setupPositionProbePattern = function (row, col) {\n      for (var r = -1; r <= 7; r += 1) {\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n        for (var c = -1; c <= 7; c += 1) {\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n    var getBestMaskPattern = function () {\n      var minLostPoint = 0;\n      var pattern = 0;\n      for (var i = 0; i < 8; i += 1) {\n        makeImpl(true, i);\n        var lostPoint = QRUtil.getLostPoint(_this);\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n      return pattern;\n    };\n    var setupTimingPattern = function () {\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = r % 2 == 0;\n      }\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = c % 2 == 0;\n      }\n    };\n    var setupPositionAdjustPattern = function () {\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n      for (var i = 0; i < pos.length; i += 1) {\n        for (var j = 0; j < pos.length; j += 1) {\n          var row = pos[i];\n          var col = pos[j];\n          if (_modules[row][col] != null) {\n            continue;\n          }\n          for (var r = -2; r <= 2; r += 1) {\n            for (var c = -2; c <= 2; c += 1) {\n              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n    var setupTypeNumber = function (test) {\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n      for (var i = 0; i < 18; i += 1) {\n        var mod = !test && (bits >> i & 1) == 1;\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n      for (var i = 0; i < 18; i += 1) {\n        var mod = !test && (bits >> i & 1) == 1;\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n    var setupTypeInfo = function (test, maskPattern) {\n      var data = _errorCorrectionLevel << 3 | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n        var mod = !test && (bits >> i & 1) == 1;\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n        var mod = !test && (bits >> i & 1) == 1;\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = !test;\n    };\n    var mapData = function (data, maskPattern) {\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n        if (col == 6) col -= 1;\n        while (true) {\n          for (var c = 0; c < 2; c += 1) {\n            if (_modules[row][col - c] == null) {\n              var dark = false;\n              if (byteIndex < data.length) {\n                dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n              }\n              var mask = maskFunc(row, col - c);\n              if (mask) {\n                dark = !dark;\n              }\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n          row += inc;\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n    var createBytes = function (buffer, rsBlocks) {\n      var offset = 0;\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n        dcdata[r] = new Array(dcCount);\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n        }\n      }\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n      var data = new Array(totalCodeCount);\n      var index = 0;\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n      return data;\n    };\n    var createData = function (typeNumber, errorCorrectionLevel, dataList) {\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n      var buffer = qrBitBuffer();\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber));\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n      return createBytes(buffer, rsBlocks);\n    };\n    _this.addData = function (data, mode) {\n      mode = mode || 'Byte';\n      var newData = null;\n      switch (mode) {\n        case 'Numeric':\n          newData = qrNumber(data);\n          break;\n        case 'Alphanumeric':\n          newData = qrAlphaNum(data);\n          break;\n        case 'Byte':\n          newData = qr8BitByte(data);\n          break;\n        case 'Kanji':\n          newData = qrKanji(data);\n          break;\n        default:\n          throw 'mode:' + mode;\n      }\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n    _this.isDark = function (row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n    _this.getModuleCount = function () {\n      return _moduleCount;\n    };\n    _this.make = function () {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber));\n            data.write(buffer);\n          }\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n        _typeNumber = typeNumber;\n      }\n      makeImpl(false, getBestMaskPattern());\n    };\n    _this.createTableTag = function (cellSize, margin) {\n      cellSize = cellSize || 2;\n      margin = typeof margin == 'undefined' ? cellSize * 4 : margin;\n      var qrHtml = '';\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n        qrHtml += '<tr>';\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c) ? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n        qrHtml += '</tr>';\n      }\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n      return qrHtml;\n    };\n    _this.createSvgTag = function (cellSize, margin, alt, title) {\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n      cellSize = cellSize || 2;\n      margin = typeof margin == 'undefined' ? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = typeof alt === 'string' ? {\n        text: alt\n      } : alt || {};\n      alt.text = alt.text || null;\n      alt.id = alt.text ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = typeof title === 'string' ? {\n        text: title\n      } : title || {};\n      title.text = title.text || null;\n      title.id = title.text ? title.id || 'qrcode-title' : null;\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c,\n        mc,\n        r,\n        mr,\n        qrSvg = '',\n        rect;\n      rect = 'l' + cellSize + ',0 0,' + cellSize + ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += title.text || alt.text ? ' role=\"img\" aria-labelledby=\"' + escapeXml([title.id, alt.id].join(' ').trim()) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += title.text ? '<title id=\"' + escapeXml(title.id) + '\">' + escapeXml(title.text) + '</title>' : '';\n      qrSvg += alt.text ? '<description id=\"' + escapeXml(alt.id) + '\">' + escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c)) {\n            mc = c * cellSize + margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n      return qrSvg;\n    };\n    _this.createDataURL = function (cellSize, margin) {\n      cellSize = cellSize || 2;\n      margin = typeof margin == 'undefined' ? cellSize * 4 : margin;\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n      return createDataURL(size, size, function (x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor((x - min) / cellSize);\n          var r = Math.floor((y - min) / cellSize);\n          return _this.isDark(r, c) ? 0 : 1;\n        } else {\n          return 1;\n        }\n      });\n    };\n    _this.createImgTag = function (cellSize, margin, alt) {\n      cellSize = cellSize || 2;\n      margin = typeof margin == 'undefined' ? cellSize * 4 : margin;\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n      return img;\n    };\n    var escapeXml = function (s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch (c) {\n          case '<':\n            escaped += '&lt;';\n            break;\n          case '>':\n            escaped += '&gt;';\n            break;\n          case '&':\n            escaped += '&amp;';\n            break;\n          case '\"':\n            escaped += '&quot;';\n            break;\n          default:\n            escaped += c;\n            break;\n        }\n      }\n      return escaped;\n    };\n    var _createHalfASCII = function (margin) {\n      var cellSize = 1;\n      margin = typeof margin == 'undefined' ? cellSize * 2 : margin;\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n      var y, x, r1, r2, p;\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n          if (min <= x && x < max && min <= y + 1 && y + 1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          } else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += margin < 1 && y + 1 >= max ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n        ascii += '\\n';\n      }\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size + 1).join('▀');\n      }\n      return ascii.substring(0, ascii.length - 1);\n    };\n    _this.createASCII = function (cellSize, margin) {\n      cellSize = cellSize || 1;\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n      cellSize -= 1;\n      margin = typeof margin == 'undefined' ? cellSize * 2 : margin;\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n      var y, x, r, p;\n      var white = Array(cellSize + 1).join('██');\n      var black = Array(cellSize + 1).join('  ');\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor((y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n      return ascii.substring(0, ascii.length - 1);\n    };\n    _this.renderTo2dContext = function (context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default': function (s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function (unicodeData, numChars) {\n    // create conversion map.\n\n    var unicodeMap = function () {\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function () {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode(b0 << 8 | b1);\n        var v = b2 << 8 | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n      return unicodeMap;\n    }();\n    var unknownChar = '?'.charCodeAt(0);\n    return function (s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ((b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function () {\n    var PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];\n    var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n    var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n    var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n    var _this = {};\n    var getBCHDigit = function (data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n    _this.getBCHTypeInfo = function (data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);\n      }\n      return (data << 10 | d) ^ G15_MASK;\n    };\n    _this.getBCHTypeNumber = function (data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);\n      }\n      return data << 12 | d;\n    };\n    _this.getPatternPosition = function (typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n    _this.getMaskFunction = function (maskPattern) {\n      switch (maskPattern) {\n        case QRMaskPattern.PATTERN000:\n          return function (i, j) {\n            return (i + j) % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN001:\n          return function (i, j) {\n            return i % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN010:\n          return function (i, j) {\n            return j % 3 == 0;\n          };\n        case QRMaskPattern.PATTERN011:\n          return function (i, j) {\n            return (i + j) % 3 == 0;\n          };\n        case QRMaskPattern.PATTERN100:\n          return function (i, j) {\n            return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN101:\n          return function (i, j) {\n            return i * j % 2 + i * j % 3 == 0;\n          };\n        case QRMaskPattern.PATTERN110:\n          return function (i, j) {\n            return (i * j % 2 + i * j % 3) % 2 == 0;\n          };\n        case QRMaskPattern.PATTERN111:\n          return function (i, j) {\n            return (i * j % 3 + (i + j) % 2) % 2 == 0;\n          };\n        default:\n          throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n    _this.getErrorCorrectPolynomial = function (errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0));\n      }\n      return a;\n    };\n    _this.getLengthInBits = function (mode, type) {\n      if (1 <= type && type < 10) {\n        // 1 - 9\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER:\n            return 10;\n          case QRMode.MODE_ALPHA_NUM:\n            return 9;\n          case QRMode.MODE_8BIT_BYTE:\n            return 8;\n          case QRMode.MODE_KANJI:\n            return 8;\n          default:\n            throw 'mode:' + mode;\n        }\n      } else if (type < 27) {\n        // 10 - 26\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER:\n            return 12;\n          case QRMode.MODE_ALPHA_NUM:\n            return 11;\n          case QRMode.MODE_8BIT_BYTE:\n            return 16;\n          case QRMode.MODE_KANJI:\n            return 10;\n          default:\n            throw 'mode:' + mode;\n        }\n      } else if (type < 41) {\n        // 27 - 40\n\n        switch (mode) {\n          case QRMode.MODE_NUMBER:\n            return 14;\n          case QRMode.MODE_ALPHA_NUM:\n            return 13;\n          case QRMode.MODE_8BIT_BYTE:\n            return 16;\n          case QRMode.MODE_KANJI:\n            return 12;\n          default:\n            throw 'mode:' + mode;\n        }\n      } else {\n        throw 'type:' + type;\n      }\n    };\n    _this.getLostPoint = function (qrcode) {\n      var moduleCount = qrcode.getModuleCount();\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n          for (var r = -1; r <= 1; r += 1) {\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n            for (var c = -1; c <= 1; c += 1) {\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n              if (r == 0 && c == 0) {\n                continue;\n              }\n              if (dark == qrcode.isDark(row + r, col + c)) {\n                sameCount += 1;\n              }\n            }\n          }\n          if (sameCount > 5) {\n            lostPoint += 3 + sameCount - 5;\n          }\n        }\n      }\n      ;\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col)) count += 1;\n          if (qrcode.isDark(row + 1, col)) count += 1;\n          if (qrcode.isDark(row, col + 1)) count += 1;\n          if (qrcode.isDark(row + 1, col + 1)) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col) && !qrcode.isDark(row, col + 1) && qrcode.isDark(row, col + 2) && qrcode.isDark(row, col + 3) && qrcode.isDark(row, col + 4) && !qrcode.isDark(row, col + 5) && qrcode.isDark(row, col + 6)) {\n            lostPoint += 40;\n          }\n        }\n      }\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col) && !qrcode.isDark(row + 1, col) && qrcode.isDark(row + 2, col) && qrcode.isDark(row + 3, col) && qrcode.isDark(row + 4, col) && !qrcode.isDark(row + 5, col) && qrcode.isDark(row + 6, col)) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col)) {\n            darkCount += 1;\n          }\n        }\n      }\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n      return lostPoint;\n    };\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function () {\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i]] = i;\n    }\n    var _this = {};\n    _this.glog = function (n) {\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n      return LOG_TABLE[n];\n    };\n    _this.gexp = function (n) {\n      while (n < 0) {\n        n += 255;\n      }\n      while (n >= 256) {\n        n -= 255;\n      }\n      return EXP_TABLE[n];\n    };\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n    var _num = function () {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n    var _this = {};\n    _this.getAt = function (index) {\n      return _num[index];\n    };\n    _this.getLength = function () {\n      return _num.length;\n    };\n    _this.multiply = function (e) {\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j)));\n        }\n      }\n      return qrPolynomial(num, 0);\n    };\n    _this.mod = function (e) {\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n      var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0));\n      var num = new Array(_this.getLength());\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n    return _this;\n  }\n  ;\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function () {\n    var RS_BLOCK_TABLE = [\n    // L\n    // M\n    // Q\n    // H\n\n    // 1\n    [1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9],\n    // 2\n    [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16],\n    // 3\n    [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13],\n    // 4\n    [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9],\n    // 5\n    [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12],\n    // 6\n    [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15],\n    // 7\n    [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14],\n    // 8\n    [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15],\n    // 9\n    [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13],\n    // 10\n    [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16],\n    // 11\n    [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13],\n    // 12\n    [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15],\n    // 13\n    [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12],\n    // 14\n    [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13],\n    // 15\n    [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12, 7, 37, 13],\n    // 16\n    [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16],\n    // 17\n    [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15],\n    // 18\n    [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15],\n    // 19\n    [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14],\n    // 20\n    [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16],\n    // 21\n    [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17],\n    // 22\n    [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13],\n    // 23\n    [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16],\n    // 24\n    [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17],\n    // 25\n    [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16],\n    // 26\n    [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17],\n    // 27\n    [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16],\n    // 28\n    [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16],\n    // 29\n    [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16],\n    // 30\n    [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16],\n    // 31\n    [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16],\n    // 32\n    [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16],\n    // 33\n    [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16],\n    // 34\n    [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17],\n    // 35\n    [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16],\n    // 36\n    [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16],\n    // 37\n    [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16],\n    // 38\n    [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16],\n    // 39\n    [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16],\n    // 40\n    [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n    var qrRSBlock = function (totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n    var _this = {};\n    var getRsBlockTable = function (typeNumber, errorCorrectionLevel) {\n      switch (errorCorrectionLevel) {\n        case QRErrorCorrectionLevel.L:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n        case QRErrorCorrectionLevel.M:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n        case QRErrorCorrectionLevel.Q:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n        case QRErrorCorrectionLevel.H:\n          return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n        default:\n          return undefined;\n      }\n    };\n    _this.getRSBlocks = function (typeNumber, errorCorrectionLevel) {\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber + '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n      var length = rsBlock.length / 3;\n      var list = [];\n      for (var i = 0; i < length; i += 1) {\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount));\n        }\n      }\n      return list;\n    };\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function () {\n    var _buffer = [];\n    var _length = 0;\n    var _this = {};\n    _this.getBuffer = function () {\n      return _buffer;\n    };\n    _this.getAt = function (index) {\n      var bufIndex = Math.floor(index / 8);\n      return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n    };\n    _this.put = function (num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit((num >>> length - i - 1 & 1) == 1);\n      }\n    };\n    _this.getLengthInBits = function () {\n      return _length;\n    };\n    _this.putBit = function (bit) {\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n      if (bit) {\n        _buffer[bufIndex] |= 0x80 >>> _length % 8;\n      }\n      _length += 1;\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function (data) {\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n    var _this = {};\n    _this.getMode = function () {\n      return _mode;\n    };\n    _this.getLength = function (buffer) {\n      return _data.length;\n    };\n    _this.write = function (buffer) {\n      var data = _data;\n      var i = 0;\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3)), 10);\n        i += 3;\n      }\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1)), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2)), 7);\n        }\n      }\n    };\n    var strToNum = function (s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i));\n      }\n      return num;\n    };\n    var chatToNum = function (c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function (data) {\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n    var _this = {};\n    _this.getMode = function () {\n      return _mode;\n    };\n    _this.getLength = function (buffer) {\n      return _data.length;\n    };\n    _this.write = function (buffer) {\n      var s = _data;\n      var i = 0;\n      while (i + 1 < s.length) {\n        buffer.put(getCode(s.charAt(i)) * 45 + getCode(s.charAt(i + 1)), 11);\n        i += 2;\n      }\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i)), 6);\n      }\n    };\n    var getCode = function (c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n          case ' ':\n            return 36;\n          case '$':\n            return 37;\n          case '%':\n            return 38;\n          case '*':\n            return 39;\n          case '+':\n            return 40;\n          case '-':\n            return 41;\n          case '.':\n            return 42;\n          case '/':\n            return 43;\n          case ':':\n            return 44;\n          default:\n            throw 'illegal char :' + c;\n        }\n      }\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function (data) {\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n    var _this = {};\n    _this.getMode = function () {\n      return _mode;\n    };\n    _this.getLength = function (buffer) {\n      return _bytes.length;\n    };\n    _this.write = function (buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function (data) {\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function (c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || (test[0] << 8 | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n    var _bytes = stringToBytes(data);\n    var _this = {};\n    _this.getMode = function () {\n      return _mode;\n    };\n    _this.getLength = function (buffer) {\n      return ~~(_bytes.length / 2);\n    };\n    _this.write = function (buffer) {\n      var data = _bytes;\n      var i = 0;\n      while (i + 1 < data.length) {\n        var c = (0xff & data[i]) << 8 | 0xff & data[i + 1];\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n        c = (c >>> 8 & 0xff) * 0xC0 + (c & 0xff);\n        buffer.put(c, 13);\n        i += 2;\n      }\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function () {\n    var _bytes = [];\n    var _this = {};\n    _this.writeByte = function (b) {\n      _bytes.push(b & 0xff);\n    };\n    _this.writeShort = function (i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n    _this.writeBytes = function (b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n    _this.writeString = function (s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i));\n      }\n    };\n    _this.toByteArray = function () {\n      return _bytes;\n    };\n    _this.toString = function () {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function () {\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n    var _this = {};\n    var writeEncoded = function (b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f));\n    };\n    var encode = function (n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n    _this.writeByte = function (n) {\n      _buffer = _buffer << 8 | n & 0xff;\n      _buflen += 8;\n      _length += 1;\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> _buflen - 6);\n        _buflen -= 6;\n      }\n    };\n    _this.flush = function () {\n      if (_buflen > 0) {\n        writeEncoded(_buffer << 6 - _buflen);\n        _buffer = 0;\n        _buflen = 0;\n      }\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n    _this.toString = function () {\n      return _base64;\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function (str) {\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n    var _this = {};\n    _this.read = function () {\n      while (_buflen < 8) {\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n        var c = _str.charAt(_pos);\n        _pos += 1;\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/)) {\n          // ignore if whitespace.\n          continue;\n        }\n        _buffer = _buffer << 6 | decode(c.charCodeAt(0));\n        _buflen += 6;\n      }\n      var n = _buffer >>> _buflen - 8 & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n    var decode = function (c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function (width, height) {\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n    var _this = {};\n    _this.setPixel = function (x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n    _this.write = function (out) {\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n      out.writeByte(lzwMinCodeSize);\n      var offset = 0;\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n    var bitOutputStream = function (out) {\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n      var _this = {};\n      _this.write = function (data, length) {\n        if (data >>> length != 0) {\n          throw 'length over';\n        }\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & (data << _bitLength | _bitBuffer));\n          length -= 8 - _bitLength;\n          data >>>= 8 - _bitLength;\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n        _bitBuffer = data << _bitLength | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n      _this.flush = function () {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n      return _this;\n    };\n    var getLZWRaster = function (lzwMinCodeSize) {\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i));\n      }\n      table.add(String.fromCharCode(clearCode));\n      table.add(String.fromCharCode(endCode));\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n      var dataIndex = 0;\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n      while (dataIndex < _data.length) {\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n        if (table.contains(s + c)) {\n          s = s + c;\n        } else {\n          bitOut.write(table.indexOf(s), bitLength);\n          if (table.size() < 0xfff) {\n            if (table.size() == 1 << bitLength) {\n              bitLength += 1;\n            }\n            table.add(s + c);\n          }\n          s = c;\n        }\n      }\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n      bitOut.flush();\n      return byteOut.toByteArray();\n    };\n    var lzwTable = function () {\n      var _map = {};\n      var _size = 0;\n      var _this = {};\n      _this.add = function (key) {\n        if (_this.contains(key)) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n      _this.size = function () {\n        return _size;\n      };\n      _this.indexOf = function (key) {\n        return _map[key];\n      };\n      _this.contains = function (key) {\n        return typeof _map[key] != 'undefined';\n      };\n      return _this;\n    };\n    return _this;\n  };\n  var createDataURL = function (width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y));\n      }\n    }\n    var b = byteArrayOutputStream();\n    gif.write(b);\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function () {\n  qrcode.stringToBytesFuncs['UTF-8'] = function (s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i = 0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);else if (charcode < 0x800) {\n          utf8.push(0xc0 | charcode >> 6, 0x80 | charcode & 0x3f);\n        } else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | charcode >> 12, 0x80 | charcode >> 6 & 0x3f, 0x80 | charcode & 0x3f);\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\n          utf8.push(0xf0 | charcode >> 18, 0x80 | charcode >> 12 & 0x3f, 0x80 | charcode >> 6 & 0x3f, 0x80 | charcode & 0x3f);\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n}();\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  }\n})(function () {\n  return qrcode;\n});","map":{"version":3,"names":["qrcode","typeNumber","errorCorrectionLevel","PAD0","PAD1","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","_this","makeImpl","test","maskPattern","moduleCount","modules","Array","row","col","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","getBestMaskPattern","minLostPoint","pattern","i","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","length","j","bits","getBCHTypeNumber","mod","Math","floor","data","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","dark","mask","createBytes","buffer","rsBlocks","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","dataCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","rawPoly","qrPolynomial","getLength","modPoly","modIndex","getAt","totalCodeCount","index","dataList","QRRSBlock","getRSBlocks","qrBitBuffer","put","getMode","getLengthInBits","write","totalDataCount","putBit","addData","mode","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","push","isDark","getModuleCount","make","createTableTag","cellSize","margin","qrHtml","createSvgTag","alt","title","opts","arguments","text","id","size","mc","mr","qrSvg","rect","scalable","escapeXml","join","trim","createDataURL","min","x","y","createImgTag","img","s","escaped","charAt","_createHalfASCII","r1","r2","p","blocks","blocksLastLineNoMargin","ascii","substring","createASCII","white","black","line","renderTo2dContext","context","fillStyle","fillRect","stringToBytesFuncs","default","bytes","charCodeAt","stringToBytes","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","count","b0","b1","b2","b3","k","String","fromCharCode","v","unknownChar","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","digit","d","errorCorrectLength","a","multiply","QRMath","gexp","type","sameCount","darkCount","ratio","abs","EXP_TABLE","LOG_TABLE","glog","n","num","shift","_num","e","RS_BLOCK_TABLE","qrRSBlock","getRsBlockTable","undefined","rsBlock","list","_buffer","_length","bufIndex","bit","_mode","_data","strToNum","chatToNum","getCode","_bytes","code","byteArrayOutputStream","writeByte","writeShort","writeBytes","off","len","writeString","toByteArray","toString","base64EncodeOutputStream","_buflen","_base64","writeEncoded","encode","flush","padlen","str","_str","_pos","match","decode","gifImage","width","height","_width","_height","setPixel","pixel","out","lzwMinCodeSize","raster","getLZWRaster","bitOutputStream","_out","_bitLength","_bitBuffer","clearCode","endCode","bitLength","table","lzwTable","add","byteOut","bitOut","dataIndex","contains","indexOf","_map","_size","key","getPixel","gif","base64","toUTF8Array","utf8","charcode","factory","define","amd","exports","module"],"sources":["/home/seba/Escritorio/qrcket/node_modules/qrcode-generator/qrcode.js"],"sourcesContent":["//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n"],"mappings":"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AAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEtB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEtB;IACA,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEtB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEtB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEtB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEZ;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACd,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEvB;IACA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExB;IACA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE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"},"metadata":{},"sourceType":"script","externalDependencies":[]}